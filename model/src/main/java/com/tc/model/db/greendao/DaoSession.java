package com.tc.model.db.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.tc.model.entity.ArtistEntity;
import com.tc.model.entity.SongInfoEntity;
import com.tc.model.entity.SongEntity;
import com.tc.model.entity.CommonEntity;

import com.tc.model.db.greendao.ArtistEntityDao;
import com.tc.model.db.greendao.SongInfoEntityDao;
import com.tc.model.db.greendao.SongEntityDao;
import com.tc.model.db.greendao.CommonEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig artistEntityDaoConfig;
    private final DaoConfig songInfoEntityDaoConfig;
    private final DaoConfig songEntityDaoConfig;
    private final DaoConfig commonEntityDaoConfig;

    private final ArtistEntityDao artistEntityDao;
    private final SongInfoEntityDao songInfoEntityDao;
    private final SongEntityDao songEntityDao;
    private final CommonEntityDao commonEntityDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        artistEntityDaoConfig = daoConfigMap.get(ArtistEntityDao.class).clone();
        artistEntityDaoConfig.initIdentityScope(type);

        songInfoEntityDaoConfig = daoConfigMap.get(SongInfoEntityDao.class).clone();
        songInfoEntityDaoConfig.initIdentityScope(type);

        songEntityDaoConfig = daoConfigMap.get(SongEntityDao.class).clone();
        songEntityDaoConfig.initIdentityScope(type);

        commonEntityDaoConfig = daoConfigMap.get(CommonEntityDao.class).clone();
        commonEntityDaoConfig.initIdentityScope(type);

        artistEntityDao = new ArtistEntityDao(artistEntityDaoConfig, this);
        songInfoEntityDao = new SongInfoEntityDao(songInfoEntityDaoConfig, this);
        songEntityDao = new SongEntityDao(songEntityDaoConfig, this);
        commonEntityDao = new CommonEntityDao(commonEntityDaoConfig, this);

        registerDao(ArtistEntity.class, artistEntityDao);
        registerDao(SongInfoEntity.class, songInfoEntityDao);
        registerDao(SongEntity.class, songEntityDao);
        registerDao(CommonEntity.class, commonEntityDao);
    }
    
    public void clear() {
        artistEntityDaoConfig.getIdentityScope().clear();
        songInfoEntityDaoConfig.getIdentityScope().clear();
        songEntityDaoConfig.getIdentityScope().clear();
        commonEntityDaoConfig.getIdentityScope().clear();
    }

    public ArtistEntityDao getArtistEntityDao() {
        return artistEntityDao;
    }

    public SongInfoEntityDao getSongInfoEntityDao() {
        return songInfoEntityDao;
    }

    public SongEntityDao getSongEntityDao() {
        return songEntityDao;
    }

    public CommonEntityDao getCommonEntityDao() {
        return commonEntityDao;
    }

}
